(emucharts_FCU_th
 (init_TCC1 0
  (init_TCC1-1 nil 3679239183
   ("" (assert)
    (("" (assert)
      (("" (typepred "INT_MIN")
        (("" (typepred "SHRT_MIN")
          (("" (assert)
            (("" (typepred "INT_MAX")
              (("" (typepred "SHRT_MAX") (("" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((>= const-decl "bool" reals nil)
    (SHRT_MAX const-decl "{s: int | s = 32767}" limits nil)
    (INT_MAX const-decl "{i: int | i >= SHRT_MAX}" limits nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (SHRT_MIN const-decl "{s: int | s = -32767}" limits nil)
    (INT_MIN const-decl "{i: int | i <= SHRT_MIN}" limits nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (init_TCC2 0
  (init_TCC2-1 nil 3679239183
   ("" (assert)
    (("" (expand "MAIN_DISPLAY_SIZE")
      (("" (assert) (("" (grind) nil nil)) nil)) nil))
    nil)
   ((MAIN_DISPLAY_SIZE const-decl "int" constants nil)
    (length def-decl "nat" list_props nil)
    (list2finseq const-decl "finseq[T]" list2finseq nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_plus_int_is_int application-judgement "int" integers nil))
   nil))
 (init_TCC3 0
  (init_TCC3-1 nil 3679239183
   ("" (typepred "FLOAT_MAX")
    (("" (assert)
      (("" (typepred "ULONG_MAX")
        (("" (typepred "LONG_MAX")
          (("" (typepred "INT_MAX")
            (("" (typepred "SHRT_MAX") (("" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((minus_real_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (SHRT_MAX const-decl "{s: int | s = 32767}" limits nil)
    (INT_MAX const-decl "{i: int | i >= SHRT_MAX}" limits nil)
    (LONG_MAX const-decl "{li: int | li >= INT_MAX}" limits nil)
    (ULONG_MAX const-decl "{ul: int | ul >= LONG_MAX}" limits nil)
    (FLOAT_MAX const-decl "{x: nonneg_real | x >= ULONG_MAX}" limits
     nil))
   nil))
 (click_cancel_TCC1 0
  (click_cancel_TCC1-1 nil 3679239183 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (MachineState type-decl nil emucharts_FCU_th nil)
    (state type-eq-decl nil FCUDataEntry nil)
    (State type-eq-decl nil emucharts_FCU_th nil)
    (per_click_cancel const-decl "bool" emucharts_FCU_th nil))
   nil))
 (tick_TCC1 0
  (tick_TCC1-1 nil 3679239183 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (MachineState type-decl nil emucharts_FCU_th nil)
    (state type-eq-decl nil FCUDataEntry nil)
    (State type-eq-decl nil emucharts_FCU_th nil)
    (per_tick const-decl "bool" emucharts_FCU_th nil))
   nil)))

